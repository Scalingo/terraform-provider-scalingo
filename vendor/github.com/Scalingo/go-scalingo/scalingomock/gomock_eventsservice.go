// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Scalingo/go-scalingo (interfaces: EventsService)

// Package scalingomock is a generated GoMock package.
package scalingomock

import (
	go_scalingo "github.com/Scalingo/go-scalingo"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockEventsService is a mock of EventsService interface
type MockEventsService struct {
	ctrl     *gomock.Controller
	recorder *MockEventsServiceMockRecorder
}

// MockEventsServiceMockRecorder is the mock recorder for MockEventsService
type MockEventsServiceMockRecorder struct {
	mock *MockEventsService
}

// NewMockEventsService creates a new mock instance
func NewMockEventsService(ctrl *gomock.Controller) *MockEventsService {
	mock := &MockEventsService{ctrl: ctrl}
	mock.recorder = &MockEventsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockEventsService) EXPECT() *MockEventsServiceMockRecorder {
	return m.recorder
}

// EventsList mocks base method
func (m *MockEventsService) EventsList(arg0 string, arg1 go_scalingo.PaginationOpts) (go_scalingo.Events, go_scalingo.PaginationMeta, error) {
	ret := m.ctrl.Call(m, "EventsList", arg0, arg1)
	ret0, _ := ret[0].(go_scalingo.Events)
	ret1, _ := ret[1].(go_scalingo.PaginationMeta)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// EventsList indicates an expected call of EventsList
func (mr *MockEventsServiceMockRecorder) EventsList(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EventsList", reflect.TypeOf((*MockEventsService)(nil).EventsList), arg0, arg1)
}

// UserEventsList mocks base method
func (m *MockEventsService) UserEventsList(arg0 go_scalingo.PaginationOpts) (go_scalingo.Events, go_scalingo.PaginationMeta, error) {
	ret := m.ctrl.Call(m, "UserEventsList", arg0)
	ret0, _ := ret[0].(go_scalingo.Events)
	ret1, _ := ret[1].(go_scalingo.PaginationMeta)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// UserEventsList indicates an expected call of UserEventsList
func (mr *MockEventsServiceMockRecorder) UserEventsList(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UserEventsList", reflect.TypeOf((*MockEventsService)(nil).UserEventsList), arg0)
}
