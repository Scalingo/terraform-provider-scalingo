// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Scalingo/go-scalingo (interfaces: NotificationsService)

// Package scalingomock is a generated GoMock package.
package scalingomock

import (
	go_scalingo "github.com/Scalingo/go-scalingo"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockNotificationsService is a mock of NotificationsService interface
type MockNotificationsService struct {
	ctrl     *gomock.Controller
	recorder *MockNotificationsServiceMockRecorder
}

// MockNotificationsServiceMockRecorder is the mock recorder for MockNotificationsService
type MockNotificationsServiceMockRecorder struct {
	mock *MockNotificationsService
}

// NewMockNotificationsService creates a new mock instance
func NewMockNotificationsService(ctrl *gomock.Controller) *MockNotificationsService {
	mock := &MockNotificationsService{ctrl: ctrl}
	mock.recorder = &MockNotificationsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNotificationsService) EXPECT() *MockNotificationsServiceMockRecorder {
	return m.recorder
}

// NotificationDestroy mocks base method
func (m *MockNotificationsService) NotificationDestroy(arg0, arg1 string) error {
	ret := m.ctrl.Call(m, "NotificationDestroy", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// NotificationDestroy indicates an expected call of NotificationDestroy
func (mr *MockNotificationsServiceMockRecorder) NotificationDestroy(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NotificationDestroy", reflect.TypeOf((*MockNotificationsService)(nil).NotificationDestroy), arg0, arg1)
}

// NotificationProvision mocks base method
func (m *MockNotificationsService) NotificationProvision(arg0, arg1 string) (go_scalingo.NotificationRes, error) {
	ret := m.ctrl.Call(m, "NotificationProvision", arg0, arg1)
	ret0, _ := ret[0].(go_scalingo.NotificationRes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NotificationProvision indicates an expected call of NotificationProvision
func (mr *MockNotificationsServiceMockRecorder) NotificationProvision(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NotificationProvision", reflect.TypeOf((*MockNotificationsService)(nil).NotificationProvision), arg0, arg1)
}

// NotificationUpdate mocks base method
func (m *MockNotificationsService) NotificationUpdate(arg0, arg1, arg2 string) (go_scalingo.NotificationRes, error) {
	ret := m.ctrl.Call(m, "NotificationUpdate", arg0, arg1, arg2)
	ret0, _ := ret[0].(go_scalingo.NotificationRes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NotificationUpdate indicates an expected call of NotificationUpdate
func (mr *MockNotificationsServiceMockRecorder) NotificationUpdate(arg0, arg1, arg2 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NotificationUpdate", reflect.TypeOf((*MockNotificationsService)(nil).NotificationUpdate), arg0, arg1, arg2)
}

// NotificationsList mocks base method
func (m *MockNotificationsService) NotificationsList(arg0 string) ([]*go_scalingo.Notification, error) {
	ret := m.ctrl.Call(m, "NotificationsList", arg0)
	ret0, _ := ret[0].([]*go_scalingo.Notification)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NotificationsList indicates an expected call of NotificationsList
func (mr *MockNotificationsServiceMockRecorder) NotificationsList(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NotificationsList", reflect.TypeOf((*MockNotificationsService)(nil).NotificationsList), arg0)
}
