// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Scalingo/go-scalingo (interfaces: LogsService)

// Package scalingomock is a generated GoMock package.
package scalingomock

import (
	gomock "github.com/golang/mock/gomock"
	http "net/http"
	reflect "reflect"
)

// MockLogsService is a mock of LogsService interface
type MockLogsService struct {
	ctrl     *gomock.Controller
	recorder *MockLogsServiceMockRecorder
}

// MockLogsServiceMockRecorder is the mock recorder for MockLogsService
type MockLogsServiceMockRecorder struct {
	mock *MockLogsService
}

// NewMockLogsService creates a new mock instance
func NewMockLogsService(ctrl *gomock.Controller) *MockLogsService {
	mock := &MockLogsService{ctrl: ctrl}
	mock.recorder = &MockLogsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLogsService) EXPECT() *MockLogsServiceMockRecorder {
	return m.recorder
}

// Logs mocks base method
func (m *MockLogsService) Logs(arg0 string, arg1 int, arg2 string) (*http.Response, error) {
	ret := m.ctrl.Call(m, "Logs", arg0, arg1, arg2)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Logs indicates an expected call of Logs
func (mr *MockLogsServiceMockRecorder) Logs(arg0, arg1, arg2 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Logs", reflect.TypeOf((*MockLogsService)(nil).Logs), arg0, arg1, arg2)
}

// LogsURL mocks base method
func (m *MockLogsService) LogsURL(arg0 string) (*http.Response, error) {
	ret := m.ctrl.Call(m, "LogsURL", arg0)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LogsURL indicates an expected call of LogsURL
func (mr *MockLogsServiceMockRecorder) LogsURL(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LogsURL", reflect.TypeOf((*MockLogsService)(nil).LogsURL), arg0)
}
